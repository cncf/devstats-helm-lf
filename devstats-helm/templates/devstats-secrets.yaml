{{- $skipSecrets := .Values.skipSecrets -}}
{{ if not $skipSecrets }}
{{- $skipPGSecret := .Values.skipPGSecret -}}
{{ if not $skipPGSecret }}
# PG secret starts
{{- $pgAdminUser := or .Values.pgAdminUser (.Files.Get "secrets/PG_ADMIN_USER.secret") -}}
{{- $pgHost := or .Values.pgHost (.Files.Get "secrets/PG_HOST.secret") -}}
{{- $pgHostRO := or .Values.pgHostRO (.Files.Get "secrets/PG_HOST_RO.secret") -}}
{{- $pgPass := or .Values.pgPass (.Files.Get (printf "secrets/PG_PASS.%s.secret" .Values.deployEnv)) -}}
{{- $pgPassRO := or .Values.pgPassRO (.Files.Get (printf "secrets/PG_PASS_RO.%s.secret" .Values.deployEnv)) -}}
{{- $pgPassTeam := or .Values.pgPassTeam (.Files.Get (printf "secrets/PG_PASS_TEAM.%s.secret" .Values.deployEnv)) -}}
{{- $pgPassRep := or .Values.pgPassRep (.Files.Get (printf "secrets/PG_PASS_REP.%s.secret" .Values.deployEnv)) -}}
{{- $pgPort := or .Values.pgPort (.Files.Get "secrets/PG_PORT.secret") -}}
{{ if and $pgAdminUser $pgHost $pgHostRO $pgPass $pgPassRO $pgPassTeam $pgPassRep $pgPort }}
---
apiVersion: v1
data:
  PG_ADMIN_USER.secret: {{ $pgAdminUser | b64enc }}
  PG_HOST.secret: {{ $pgHost | b64enc }}
  PG_HOST_RO.secret: {{ $pgHostRO | b64enc }}
  PG_PASS.secret: {{ $pgPass | b64enc }}
  PG_PASS_RO.secret: {{ $pgPassRO | b64enc }}
  PG_PASS_TEAM.secret: {{ $pgPassTeam | b64enc }}
  PG_PASS_REP.secret: {{ $pgPassRep | b64enc }}
  PG_PORT.secret: {{ $pgPort | b64enc }}
kind: Secret
metadata:
  namespace: '{{ .Values.namespace }}'
  name: {{ .Values.pgSecret }}
  labels:
    type: 'secret'
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "devstats-helm.name" . }}
    helm.sh/chart: {{ include "devstats-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: {{ .Values.secretType }}
{{ else }}
missing_one_or_more_pg_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# PG secret ends
{{ end }}
{{- $skipESSecret := .Values.skipESSecret -}}
{{ if not $skipESSecret }}
# ES secret starts
{{- $esHost := or .Values.esHost (.Files.Get "secrets/ES_HOST.secret") -}}
{{- $esPort := or .Values.esPort (.Files.Get "secrets/ES_PORT.secret") -}}
{{- $esProto := or .Values.esProto (.Files.Get "secrets/ES_PROTO.secret") -}}
{{- $esURL := or .Values.esURL (.Files.Get "secrets/GHA2DB_ES_URL.secret") -}}
{{ if and $esHost $esPort $esProto $esURL }}
---
apiVersion: v1
data:
  ES_HOST.secret: {{ $esHost | b64enc }}
  ES_PORT.secret: {{ $esPort | b64enc }}
  ES_PROTO.secret: {{ $esProto | b64enc }}
  GHA2DB_ES_URL.secret: {{ $esURL | b64enc }}
kind: Secret
metadata:
  namespace: '{{ .Values.namespace }}'
  name: {{ .Values.esSecret }}
  labels:
    type: 'secret'
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "devstats-helm.name" . }}
    helm.sh/chart: {{ include "devstats-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: {{ .Values.secretType }}
{{ else }}
missing_one_or_more_es_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# ES secret ends
{{ end }}
{{- $skipGitHubSecret := .Values.skipGitHubSecret -}}
{{ if not $skipGitHubSecret }}
# GitHub secret starts
{{- $token := or .Values.githubOauth (.Files.Get (printf "secrets/GHA2DB_GITHUB_OAUTH.%s.secret" .Values.deployEnv)) -}}
{{ if $token }}
---
apiVersion: v1
data:
  GHA2DB_GITHUB_OAUTH.secret: {{ $token | b64enc }}
kind: Secret
metadata:
  namespace: '{{ .Values.namespace }}'
  name: {{ .Values.oauthSecret }}
  labels:
    type: 'secret'
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "devstats-helm.name" . }}
    helm.sh/chart: {{ include "devstats-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: {{ .Values.secretType }}
{{ else }}
missing_github_oauth_secret: "Please take a look at the NOTES.txt file"
{{ end }}
# GitHub secret ends
{{ end }}
{{- $skipGrafanaSecret := .Values.skipGrafanaSecret -}}
{{ if not $skipGrafanaSecret }}
# Grafana secret starts
{{- $grafanaUser := or .Values.grafanaUser (.Files.Get "secrets/GF_SECURITY_ADMIN_USER.secret") -}}
{{- $grafanaPassword := or .Values.grafanaPassword (.Files.Get (printf "secrets/GF_SECURITY_ADMIN_PASSWORD.%s.secret" .Values.deployEnv)) -}}
{{ if and $grafanaUser $grafanaPassword }}
---
apiVersion: v1
data:
  GF_SECURITY_ADMIN_USER.secret: {{ $grafanaUser | b64enc }}
  GF_SECURITY_ADMIN_PASSWORD.secret: {{ $grafanaPassword | b64enc }}
kind: Secret
metadata:
  namespace: '{{ .Values.namespace }}'
  name: {{ .Values.grafanaSecret }}
  labels:
    type: 'secret'
{{- with .Values.labels -}}
{{ toYaml . | nindent 4 }}
{{ end }}
    app.kubernetes.io/name: {{ include "devstats-helm.name" . }}
    helm.sh/chart: {{ include "devstats-helm.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: {{ .Values.secretType }}
{{ else }}
missing_one_or_more_grafana_secrets: "Please take a look at the NOTES.txt file"
{{ end }}
# Grafana secret ends
{{ end }}
{{ end }}
